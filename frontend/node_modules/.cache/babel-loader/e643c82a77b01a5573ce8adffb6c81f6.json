{"ast":null,"code":"import U, { Fragment as G, createContext as W, createRef as B, useContext as V, useEffect as $, useMemo as S, useReducer as q, useRef as K } from \"react\";\nimport { match as _ } from '../../utils/match.js';\nimport { forwardRefWithAs as h, render as P, Features as N } from '../../utils/render.js';\nimport { disposables as O } from '../../utils/disposables.js';\nimport { useDisposables as H } from '../../hooks/use-disposables.js';\nimport { useIsoMorphicEffect as E } from '../../hooks/use-iso-morphic-effect.js';\nimport { useSyncRefs as x } from '../../hooks/use-sync-refs.js';\nimport { useId as F } from '../../hooks/use-id.js';\nimport { Keys as m } from '../keyboard.js';\nimport { Focus as y, calculateActiveIndex as J } from '../../utils/calculate-active-index.js';\nimport { isDisabledReactIssue7711 as z } from '../../utils/bugs.js';\nimport { isFocusableElement as X, FocusableMode as Y, sortByDomNode as Z, Focus as j, focusFrom as ee, restoreFocusIfNecessary as Q } from '../../utils/focus-management.js';\nimport { useOutsideClick as te } from '../../hooks/use-outside-click.js';\nimport { useTreeWalker as re } from '../../hooks/use-tree-walker.js';\nimport { useOpenClosed as ne, State as L, OpenClosedProvider as oe } from '../../internal/open-closed.js';\nimport { useResolveButtonType as ae } from '../../hooks/use-resolve-button-type.js';\nimport { useOwnerDocument as ie } from '../../hooks/use-owner.js';\nimport { useEvent as I } from '../../hooks/use-event.js';\nvar ue = (o => (o[o.Open = 0] = \"Open\", o[o.Closed = 1] = \"Closed\", o))(ue || {}),\n  se = (o => (o[o.Pointer = 0] = \"Pointer\", o[o.Other = 1] = \"Other\", o))(se || {}),\n  le = (a => (a[a.OpenMenu = 0] = \"OpenMenu\", a[a.CloseMenu = 1] = \"CloseMenu\", a[a.GoToItem = 2] = \"GoToItem\", a[a.Search = 3] = \"Search\", a[a.ClearSearch = 4] = \"ClearSearch\", a[a.RegisterItem = 5] = \"RegisterItem\", a[a.UnregisterItem = 6] = \"UnregisterItem\", a))(le || {});\nfunction k(t, i = o => o) {\n  let o = t.activeItemIndex !== null ? t.items[t.activeItemIndex] : null,\n    e = Z(i(t.items.slice()), u => u.dataRef.current.domRef.current),\n    n = o ? e.indexOf(o) : null;\n  return n === -1 && (n = null), {\n    items: e,\n    activeItemIndex: n\n  };\n}\nlet ce = {\n    [1](t) {\n      return t.menuState === 1 ? t : {\n        ...t,\n        activeItemIndex: null,\n        menuState: 1\n      };\n    },\n    [0](t) {\n      return t.menuState === 0 ? t : {\n        ...t,\n        menuState: 0\n      };\n    },\n    [2]: (t, i) => {\n      var n;\n      let o = k(t),\n        e = J(i, {\n          resolveItems: () => o.items,\n          resolveActiveIndex: () => o.activeItemIndex,\n          resolveId: u => u.id,\n          resolveDisabled: u => u.dataRef.current.disabled\n        });\n      return {\n        ...t,\n        ...o,\n        searchQuery: \"\",\n        activeItemIndex: e,\n        activationTrigger: (n = i.trigger) != null ? n : 1\n      };\n    },\n    [3]: (t, i) => {\n      let e = t.searchQuery !== \"\" ? 0 : 1,\n        n = t.searchQuery + i.value.toLowerCase(),\n        s = (t.activeItemIndex !== null ? t.items.slice(t.activeItemIndex + e).concat(t.items.slice(0, t.activeItemIndex + e)) : t.items).find(c => {\n          var p;\n          return ((p = c.dataRef.current.textValue) == null ? void 0 : p.startsWith(n)) && !c.dataRef.current.disabled;\n        }),\n        a = s ? t.items.indexOf(s) : -1;\n      return a === -1 || a === t.activeItemIndex ? {\n        ...t,\n        searchQuery: n\n      } : {\n        ...t,\n        searchQuery: n,\n        activeItemIndex: a,\n        activationTrigger: 1\n      };\n    },\n    [4](t) {\n      return t.searchQuery === \"\" ? t : {\n        ...t,\n        searchQuery: \"\",\n        searchActiveItemIndex: null\n      };\n    },\n    [5]: (t, i) => {\n      let o = k(t, e => [...e, {\n        id: i.id,\n        dataRef: i.dataRef\n      }]);\n      return {\n        ...t,\n        ...o\n      };\n    },\n    [6]: (t, i) => {\n      let o = k(t, e => {\n        let n = e.findIndex(u => u.id === i.id);\n        return n !== -1 && e.splice(n, 1), e;\n      });\n      return {\n        ...t,\n        ...o,\n        activationTrigger: 1\n      };\n    }\n  },\n  w = W(null);\nw.displayName = \"MenuContext\";\nfunction D(t) {\n  let i = V(w);\n  if (i === null) {\n    let o = new Error(`<${t} /> is missing a parent <Menu /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(o, D), o;\n  }\n  return i;\n}\nfunction pe(t, i) {\n  return _(i.type, ce, t, i);\n}\nlet me = G,\n  de = h(function (i, o) {\n    let e = q(pe, {\n        menuState: 1,\n        buttonRef: B(),\n        itemsRef: B(),\n        items: [],\n        searchQuery: \"\",\n        activeItemIndex: null,\n        activationTrigger: 1\n      }),\n      [{\n        menuState: n,\n        itemsRef: u,\n        buttonRef: s\n      }, a] = e,\n      c = x(o);\n    te([s, u], (M, R) => {\n      var f;\n      a({\n        type: 1\n      }), X(R, Y.Loose) || (M.preventDefault(), (f = s.current) == null || f.focus());\n    }, n === 0);\n    let p = S(() => ({\n        open: n === 0\n      }), [n]),\n      g = i,\n      d = {\n        ref: c\n      };\n    return U.createElement(w.Provider, {\n      value: e\n    }, U.createElement(oe, {\n      value: _(n, {\n        [0]: L.Open,\n        [1]: L.Closed\n      })\n    }, P({\n      ourProps: d,\n      theirProps: g,\n      slot: p,\n      defaultTag: me,\n      name: \"Menu\"\n    })));\n  }),\n  fe = \"button\",\n  Te = h(function (i, o) {\n    var f;\n    let [e, n] = D(\"Menu.Button\"),\n      u = x(e.buttonRef, o),\n      s = `headlessui-menu-button-${F()}`,\n      a = H(),\n      c = I(l => {\n        switch (l.key) {\n          case m.Space:\n          case m.Enter:\n          case m.ArrowDown:\n            l.preventDefault(), l.stopPropagation(), n({\n              type: 0\n            }), a.nextFrame(() => n({\n              type: 2,\n              focus: y.First\n            }));\n            break;\n          case m.ArrowUp:\n            l.preventDefault(), l.stopPropagation(), n({\n              type: 0\n            }), a.nextFrame(() => n({\n              type: 2,\n              focus: y.Last\n            }));\n            break;\n        }\n      }),\n      p = I(l => {\n        switch (l.key) {\n          case m.Space:\n            l.preventDefault();\n            break;\n        }\n      }),\n      g = I(l => {\n        if (z(l.currentTarget)) return l.preventDefault();\n        i.disabled || (e.menuState === 0 ? (n({\n          type: 1\n        }), a.nextFrame(() => {\n          var b;\n          return (b = e.buttonRef.current) == null ? void 0 : b.focus({\n            preventScroll: !0\n          });\n        })) : (l.preventDefault(), n({\n          type: 0\n        })));\n      }),\n      d = S(() => ({\n        open: e.menuState === 0\n      }), [e]),\n      M = i,\n      R = {\n        ref: u,\n        id: s,\n        type: ae(i, e.buttonRef),\n        \"aria-haspopup\": !0,\n        \"aria-controls\": (f = e.itemsRef.current) == null ? void 0 : f.id,\n        \"aria-expanded\": i.disabled ? void 0 : e.menuState === 0,\n        onKeyDown: c,\n        onKeyUp: p,\n        onClick: g\n      };\n    return P({\n      ourProps: R,\n      theirProps: M,\n      slot: d,\n      defaultTag: fe,\n      name: \"Menu.Button\"\n    });\n  }),\n  ye = \"div\",\n  Ie = N.RenderStrategy | N.Static,\n  ge = h(function (i, o) {\n    var b, C;\n    let [e, n] = D(\"Menu.Items\"),\n      u = x(e.itemsRef, o),\n      s = ie(e.itemsRef),\n      a = `headlessui-menu-items-${F()}`,\n      c = H(),\n      p = ne(),\n      g = (() => p !== null ? p === L.Open : e.menuState === 0)();\n    $(() => {\n      let r = e.itemsRef.current;\n      !r || e.menuState === 0 && r !== (s == null ? void 0 : s.activeElement) && r.focus({\n        preventScroll: !0\n      });\n    }, [e.menuState, e.itemsRef, s]), re({\n      container: e.itemsRef.current,\n      enabled: e.menuState === 0,\n      accept(r) {\n        return r.getAttribute(\"role\") === \"menuitem\" ? NodeFilter.FILTER_REJECT : r.hasAttribute(\"role\") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;\n      },\n      walk(r) {\n        r.setAttribute(\"role\", \"none\");\n      }\n    });\n    let d = I(r => {\n        var T, A;\n        switch (c.dispose(), r.key) {\n          case m.Space:\n            if (e.searchQuery !== \"\") return r.preventDefault(), r.stopPropagation(), n({\n              type: 3,\n              value: r.key\n            });\n          case m.Enter:\n            if (r.preventDefault(), r.stopPropagation(), n({\n              type: 1\n            }), e.activeItemIndex !== null) {\n              let {\n                dataRef: v\n              } = e.items[e.activeItemIndex];\n              (A = (T = v.current) == null ? void 0 : T.domRef.current) == null || A.click();\n            }\n            Q(e.buttonRef.current);\n            break;\n          case m.ArrowDown:\n            return r.preventDefault(), r.stopPropagation(), n({\n              type: 2,\n              focus: y.Next\n            });\n          case m.ArrowUp:\n            return r.preventDefault(), r.stopPropagation(), n({\n              type: 2,\n              focus: y.Previous\n            });\n          case m.Home:\n          case m.PageUp:\n            return r.preventDefault(), r.stopPropagation(), n({\n              type: 2,\n              focus: y.First\n            });\n          case m.End:\n          case m.PageDown:\n            return r.preventDefault(), r.stopPropagation(), n({\n              type: 2,\n              focus: y.Last\n            });\n          case m.Escape:\n            r.preventDefault(), r.stopPropagation(), n({\n              type: 1\n            }), O().nextFrame(() => {\n              var v;\n              return (v = e.buttonRef.current) == null ? void 0 : v.focus({\n                preventScroll: !0\n              });\n            });\n            break;\n          case m.Tab:\n            r.preventDefault(), r.stopPropagation(), n({\n              type: 1\n            }), O().nextFrame(() => {\n              ee(e.buttonRef.current, r.shiftKey ? j.Previous : j.Next);\n            });\n            break;\n          default:\n            r.key.length === 1 && (n({\n              type: 3,\n              value: r.key\n            }), c.setTimeout(() => n({\n              type: 4\n            }), 350));\n            break;\n        }\n      }),\n      M = I(r => {\n        switch (r.key) {\n          case m.Space:\n            r.preventDefault();\n            break;\n        }\n      }),\n      R = S(() => ({\n        open: e.menuState === 0\n      }), [e]),\n      f = i,\n      l = {\n        \"aria-activedescendant\": e.activeItemIndex === null || (b = e.items[e.activeItemIndex]) == null ? void 0 : b.id,\n        \"aria-labelledby\": (C = e.buttonRef.current) == null ? void 0 : C.id,\n        id: a,\n        onKeyDown: d,\n        onKeyUp: M,\n        role: \"menu\",\n        tabIndex: 0,\n        ref: u\n      };\n    return P({\n      ourProps: l,\n      theirProps: f,\n      slot: R,\n      defaultTag: ye,\n      features: Ie,\n      visible: g,\n      name: \"Menu.Items\"\n    });\n  }),\n  Me = G,\n  Re = h(function (i, o) {\n    let {\n        disabled: e = !1,\n        ...n\n      } = i,\n      [u, s] = D(\"Menu.Item\"),\n      a = `headlessui-menu-item-${F()}`,\n      c = u.activeItemIndex !== null ? u.items[u.activeItemIndex].id === a : !1,\n      p = K(null),\n      g = x(o, p);\n    E(() => {\n      if (u.menuState !== 0 || !c || u.activationTrigger === 0) return;\n      let r = O();\n      return r.requestAnimationFrame(() => {\n        var T, A;\n        (A = (T = p.current) == null ? void 0 : T.scrollIntoView) == null || A.call(T, {\n          block: \"nearest\"\n        });\n      }), r.dispose;\n    }, [p, c, u.menuState, u.activationTrigger, u.activeItemIndex]);\n    let d = K({\n      disabled: e,\n      domRef: p\n    });\n    E(() => {\n      d.current.disabled = e;\n    }, [d, e]), E(() => {\n      var r, T;\n      d.current.textValue = (T = (r = p.current) == null ? void 0 : r.textContent) == null ? void 0 : T.toLowerCase();\n    }, [d, p]), E(() => (s({\n      type: 5,\n      id: a,\n      dataRef: d\n    }), () => s({\n      type: 6,\n      id: a\n    })), [d, a]);\n    let M = I(r => {\n        if (e) return r.preventDefault();\n        s({\n          type: 1\n        }), Q(u.buttonRef.current);\n      }),\n      R = I(() => {\n        if (e) return s({\n          type: 2,\n          focus: y.Nothing\n        });\n        s({\n          type: 2,\n          focus: y.Specific,\n          id: a\n        });\n      }),\n      f = I(() => {\n        e || c || s({\n          type: 2,\n          focus: y.Specific,\n          id: a,\n          trigger: 0\n        });\n      }),\n      l = I(() => {\n        e || !c || s({\n          type: 2,\n          focus: y.Nothing\n        });\n      }),\n      b = S(() => ({\n        active: c,\n        disabled: e\n      }), [c, e]);\n    return P({\n      ourProps: {\n        id: a,\n        ref: g,\n        role: \"menuitem\",\n        tabIndex: e === !0 ? void 0 : -1,\n        \"aria-disabled\": e === !0 ? !0 : void 0,\n        disabled: void 0,\n        onClick: M,\n        onFocus: R,\n        onPointerMove: f,\n        onMouseMove: f,\n        onPointerLeave: l,\n        onMouseLeave: l\n      },\n      theirProps: n,\n      slot: b,\n      defaultTag: Me,\n      name: \"Menu.Item\"\n    });\n  }),\n  qe = Object.assign(de, {\n    Button: Te,\n    Items: ge,\n    Item: Re\n  });\nexport { qe as Menu };","map":null,"metadata":{},"sourceType":"module"}