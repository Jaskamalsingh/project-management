{"ast":null,"code":"import { once as E } from '../../../utils/once.js';\nimport { disposables as g } from '../../../utils/disposables.js';\nimport { match as p } from '../../../utils/match.js';\nfunction f(t, ...e) {\n  t && e.length > 0 && t.classList.add(...e);\n}\nfunction v(t, ...e) {\n  t && e.length > 0 && t.classList.remove(...e);\n}\nvar T = (n => (n.Ended = \"ended\", n.Cancelled = \"cancelled\", n))(T || {});\nfunction c(t, e) {\n  let n = g();\n  if (!t) return n.dispose;\n  let {\n      transitionDuration: d,\n      transitionDelay: o\n    } = getComputedStyle(t),\n    [s, u] = [d, o].map(i => {\n      let [a = 0] = i.split(\",\").filter(Boolean).map(r => r.includes(\"ms\") ? parseFloat(r) : parseFloat(r) * 1e3).sort((r, l) => l - r);\n      return a;\n    });\n  if (s + u !== 0) {\n    let i = [];\n    i.push(n.addEventListener(t, \"transitionrun\", a => {\n      a.target === a.currentTarget && (i.splice(0).forEach(r => r()), i.push(n.addEventListener(t, \"transitionend\", r => {\n        r.target === r.currentTarget && (e(\"ended\"), i.splice(0).forEach(l => l()));\n      }), n.addEventListener(t, \"transitioncancel\", r => {\n        r.target === r.currentTarget && (e(\"cancelled\"), i.splice(0).forEach(l => l()));\n      })));\n    }));\n  } else e(\"ended\");\n  return n.add(() => e(\"cancelled\")), n.dispose;\n}\nfunction C(t, e, n, d) {\n  let o = n ? \"enter\" : \"leave\",\n    s = g(),\n    u = d !== void 0 ? E(d) : () => {};\n  o === \"enter\" && (t.removeAttribute(\"hidden\"), t.style.display = \"\");\n  let m = p(o, {\n      enter: () => e.enter,\n      leave: () => e.leave\n    }),\n    i = p(o, {\n      enter: () => e.enterTo,\n      leave: () => e.leaveTo\n    }),\n    a = p(o, {\n      enter: () => e.enterFrom,\n      leave: () => e.leaveFrom\n    });\n  return v(t, ...e.enter, ...e.enterTo, ...e.enterFrom, ...e.leave, ...e.leaveFrom, ...e.leaveTo, ...e.entered), f(t, ...m, ...a), s.nextFrame(() => {\n    v(t, ...a), f(t, ...i), c(t, r => (r === \"ended\" && (v(t, ...m), f(t, ...e.entered)), u(r)));\n  }), s.dispose;\n}\nexport { T as Reason, C as transition };","map":null,"metadata":{},"sourceType":"module"}