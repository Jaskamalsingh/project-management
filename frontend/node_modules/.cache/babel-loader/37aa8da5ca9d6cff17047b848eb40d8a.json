{"ast":null,"code":"import j, { Fragment as se, createContext as Q, createRef as be, useCallback as de, useContext as Y, useMemo as P, useReducer as ce, useRef as I } from \"react\";\nimport { useComputed as W } from '../../hooks/use-computed.js';\nimport { useDisposables as Z } from '../../hooks/use-disposables.js';\nimport { useEvent as g } from '../../hooks/use-event.js';\nimport { useId as U } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as D } from '../../hooks/use-iso-morphic-effect.js';\nimport { useLatestValue as fe } from '../../hooks/use-latest-value.js';\nimport { useOutsideClick as me } from '../../hooks/use-outside-click.js';\nimport { useResolveButtonType as Te } from '../../hooks/use-resolve-button-type.js';\nimport { useSyncRefs as G } from '../../hooks/use-sync-refs.js';\nimport { useTreeWalker as xe } from '../../hooks/use-tree-walker.js';\nimport { calculateActiveIndex as ge, Focus as R } from '../../utils/calculate-active-index.js';\nimport { disposables as z } from '../../utils/disposables.js';\nimport { forwardRefWithAs as F, render as _, compact as Oe, Features as ee } from '../../utils/render.js';\nimport { isDisabledReactIssue7711 as Ce } from '../../utils/bugs.js';\nimport { match as k } from '../../utils/match.js';\nimport { objectToFormEntries as Re } from '../../utils/form.js';\nimport { sortByDomNode as ve } from '../../utils/focus-management.js';\nimport { Hidden as ye, Features as Ae } from '../../internal/hidden.js';\nimport { useOpenClosed as Se, State as X, OpenClosedProvider as Pe } from '../../internal/open-closed.js';\nimport { Keys as v } from '../keyboard.js';\nimport { useControllable as Ie } from '../../hooks/use-controllable.js';\nimport { useWatch as Ee } from '../../hooks/use-watch.js';\nvar De = (n => (n[n.Open = 0] = \"Open\", n[n.Closed = 1] = \"Closed\", n))(De || {}),\n  Le = (n => (n[n.Single = 0] = \"Single\", n[n.Multi = 1] = \"Multi\", n))(Le || {}),\n  Ve = (n => (n[n.Pointer = 0] = \"Pointer\", n[n.Other = 1] = \"Other\", n))(Ve || {}),\n  Me = (a => (a[a.OpenCombobox = 0] = \"OpenCombobox\", a[a.CloseCombobox = 1] = \"CloseCombobox\", a[a.GoToOption = 2] = \"GoToOption\", a[a.RegisterOption = 3] = \"RegisterOption\", a[a.UnregisterOption = 4] = \"UnregisterOption\", a[a.RegisterLabel = 5] = \"RegisterLabel\", a))(Me || {});\nfunction $(t, l = n => n) {\n  let n = t.activeOptionIndex !== null ? t.options[t.activeOptionIndex] : null,\n    e = ve(l(t.options.slice()), r => r.dataRef.current.domRef.current),\n    i = n ? e.indexOf(n) : null;\n  return i === -1 && (i = null), {\n    options: e,\n    activeOptionIndex: i\n  };\n}\nlet he = {\n    [1](t) {\n      return t.dataRef.current.disabled || t.comboboxState === 1 ? t : {\n        ...t,\n        activeOptionIndex: null,\n        comboboxState: 1\n      };\n    },\n    [0](t) {\n      if (t.dataRef.current.disabled || t.comboboxState === 0) return t;\n      let l = t.activeOptionIndex,\n        {\n          isSelected: n\n        } = t.dataRef.current,\n        e = t.options.findIndex(i => n(i.dataRef.current.value));\n      return e !== -1 && (l = e), {\n        ...t,\n        comboboxState: 0,\n        activeOptionIndex: l\n      };\n    },\n    [2](t, l) {\n      var i;\n      if (t.dataRef.current.disabled || t.dataRef.current.optionsRef.current && !t.dataRef.current.optionsPropsRef.current.static && t.comboboxState === 1) return t;\n      let n = $(t);\n      if (n.activeOptionIndex === null) {\n        let r = n.options.findIndex(a => !a.dataRef.current.disabled);\n        r !== -1 && (n.activeOptionIndex = r);\n      }\n      let e = ge(l, {\n        resolveItems: () => n.options,\n        resolveActiveIndex: () => n.activeOptionIndex,\n        resolveId: r => r.id,\n        resolveDisabled: r => r.dataRef.current.disabled\n      });\n      return {\n        ...t,\n        ...n,\n        activeOptionIndex: e,\n        activationTrigger: (i = l.trigger) != null ? i : 1\n      };\n    },\n    [3]: (t, l) => {\n      let n = {\n          id: l.id,\n          dataRef: l.dataRef\n        },\n        e = $(t, r => [...r, n]);\n      t.activeOptionIndex === null && t.dataRef.current.isSelected(l.dataRef.current.value) && (e.activeOptionIndex = e.options.indexOf(n));\n      let i = {\n        ...t,\n        ...e,\n        activationTrigger: 1\n      };\n      return t.dataRef.current.__demoMode && t.dataRef.current.value === void 0 && (i.activeOptionIndex = 0), i;\n    },\n    [4]: (t, l) => {\n      let n = $(t, e => {\n        let i = e.findIndex(r => r.id === l.id);\n        return i !== -1 && e.splice(i, 1), e;\n      });\n      return {\n        ...t,\n        ...n,\n        activationTrigger: 1\n      };\n    },\n    [5]: (t, l) => ({\n      ...t,\n      labelId: l.id\n    })\n  },\n  J = Q(null);\nJ.displayName = \"ComboboxActionsContext\";\nfunction N(t) {\n  let l = Y(J);\n  if (l === null) {\n    let n = new Error(`<${t} /> is missing a parent <Combobox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(n, N), n;\n  }\n  return l;\n}\nlet q = Q(null);\nq.displayName = \"ComboboxDataContext\";\nfunction w(t) {\n  let l = Y(q);\n  if (l === null) {\n    let n = new Error(`<${t} /> is missing a parent <Combobox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(n, w), n;\n  }\n  return l;\n}\nfunction Fe(t, l) {\n  return k(l.type, he, t, l);\n}\nlet _e = se;\nfunction ke(t, l) {\n  let {\n      value: n,\n      defaultValue: e,\n      onChange: i,\n      name: r,\n      by: a = (b, f) => b === f,\n      disabled: m = !1,\n      __demoMode: o = !1,\n      nullable: u = !1,\n      multiple: y = !1,\n      ...O\n    } = t,\n    [x, C] = Ie(n, i, e),\n    [c, s] = ce(Fe, {\n      dataRef: be(),\n      comboboxState: o ? 0 : 1,\n      options: [],\n      activeOptionIndex: null,\n      activationTrigger: 1,\n      labelId: null\n    }),\n    T = I(!1),\n    B = I({\n      static: !1,\n      hold: !1\n    }),\n    L = I(null),\n    E = I(null),\n    V = I(null),\n    d = I(null),\n    A = g(typeof a == \"string\" ? (b, f) => {\n      let S = a;\n      return (b == null ? void 0 : b[S]) === (f == null ? void 0 : f[S]);\n    } : a),\n    M = de(b => k(p.mode, {\n      [1]: () => x.some(f => A(f, b)),\n      [0]: () => A(x, b)\n    }), [x]),\n    p = P(() => ({\n      ...c,\n      optionsPropsRef: B,\n      labelRef: L,\n      inputRef: E,\n      buttonRef: V,\n      optionsRef: d,\n      value: x,\n      disabled: m,\n      mode: y ? 1 : 0,\n      get activeOptionIndex() {\n        if (T.current && c.activeOptionIndex === null && c.options.length > 0) {\n          let b = c.options.findIndex(f => !f.dataRef.current.disabled);\n          if (b !== -1) return b;\n        }\n        return c.activeOptionIndex;\n      },\n      compare: A,\n      isSelected: M,\n      nullable: u,\n      __demoMode: o\n    }), [x, m, y, u, o, c]);\n  D(() => {\n    c.dataRef.current = p;\n  }, [p]), me([p.buttonRef, p.inputRef, p.optionsRef], () => s({\n    type: 1\n  }), p.comboboxState === 0);\n  let h = P(() => ({\n      open: p.comboboxState === 0,\n      disabled: m,\n      activeIndex: p.activeOptionIndex,\n      activeOption: p.activeOptionIndex === null ? null : p.options[p.activeOptionIndex].dataRef.current.value,\n      value: x\n    }), [p, m, x]),\n    H = g(b => {\n      let f = p.options.find(S => S.id === b);\n      !f || K(f.dataRef.current.value);\n    }),\n    oe = g(() => {\n      if (p.activeOptionIndex !== null) {\n        let {\n          dataRef: b,\n          id: f\n        } = p.options[p.activeOptionIndex];\n        K(b.current.value), s({\n          type: 2,\n          focus: R.Specific,\n          id: f\n        });\n      }\n    }),\n    te = g(() => {\n      s({\n        type: 0\n      }), T.current = !0;\n    }),\n    ne = g(() => {\n      s({\n        type: 1\n      }), T.current = !1;\n    }),\n    re = g((b, f, S) => (T.current = !1, b === R.Specific ? s({\n      type: 2,\n      focus: R.Specific,\n      id: f,\n      trigger: S\n    }) : s({\n      type: 2,\n      focus: b,\n      trigger: S\n    }))),\n    ae = g((b, f) => (s({\n      type: 3,\n      id: b,\n      dataRef: f\n    }), () => s({\n      type: 4,\n      id: b\n    }))),\n    le = g(b => (s({\n      type: 5,\n      id: b\n    }), () => s({\n      type: 5,\n      id: null\n    }))),\n    K = g(b => k(p.mode, {\n      [0]() {\n        return C == null ? void 0 : C(b);\n      },\n      [1]() {\n        let f = p.value.slice(),\n          S = f.findIndex(pe => A(pe, b));\n        return S === -1 ? f.push(b) : f.splice(S, 1), C == null ? void 0 : C(f);\n      }\n    })),\n    ie = P(() => ({\n      onChange: K,\n      registerOption: ae,\n      registerLabel: le,\n      goToOption: re,\n      closeCombobox: ne,\n      openCombobox: te,\n      selectActiveOption: oe,\n      selectOption: H\n    }), []),\n    ue = l === null ? {} : {\n      ref: l\n    };\n  return j.createElement(J.Provider, {\n    value: ie\n  }, j.createElement(q.Provider, {\n    value: p\n  }, j.createElement(Pe, {\n    value: k(p.comboboxState, {\n      [0]: X.Open,\n      [1]: X.Closed\n    })\n  }, r != null && x != null && Re({\n    [r]: x\n  }).map(([b, f]) => j.createElement(ye, {\n    features: Ae.Hidden,\n    ...Oe({\n      key: b,\n      as: \"input\",\n      type: \"hidden\",\n      hidden: !0,\n      readOnly: !0,\n      name: b,\n      value: f\n    })\n  })), _({\n    ourProps: ue,\n    theirProps: O,\n    slot: h,\n    defaultTag: _e,\n    name: \"Combobox\"\n  }))));\n}\nlet we = F(ke),\n  Be = \"input\",\n  Ue = F(function (l, n) {\n    var E, V;\n    let {\n        value: e,\n        onChange: i,\n        displayValue: r,\n        type: a = \"text\",\n        ...m\n      } = l,\n      o = w(\"Combobox.Input\"),\n      u = N(\"Combobox.Input\"),\n      y = G(o.inputRef, n),\n      O = `headlessui-combobox-input-${U()}`,\n      x = Z(),\n      C = P(() => {\n        var d;\n        return typeof r == \"function\" ? (d = r(o.value)) != null ? d : \"\" : typeof o.value == \"string\" ? o.value : \"\";\n      }, [o.value]);\n    Ee(([d, A], [M, p]) => {\n      !o.inputRef.current || (p === 0 && A === 1 || d !== M) && (o.inputRef.current.value = d);\n    }, [C, o.comboboxState]);\n    let c = g(d => {\n        switch (d.key) {\n          case v.Backspace:\n          case v.Delete:\n            if (o.mode !== 0 || !o.nullable) return;\n            let A = d.currentTarget;\n            x.requestAnimationFrame(() => {\n              A.value === \"\" && (u.onChange(null), o.optionsRef.current && (o.optionsRef.current.scrollTop = 0), u.goToOption(R.Nothing));\n            });\n            break;\n          case v.Enter:\n            if (o.comboboxState !== 0) return;\n            if (d.preventDefault(), d.stopPropagation(), o.activeOptionIndex === null) {\n              u.closeCombobox();\n              return;\n            }\n            u.selectActiveOption(), o.mode === 0 && u.closeCombobox();\n            break;\n          case v.ArrowDown:\n            return d.preventDefault(), d.stopPropagation(), k(o.comboboxState, {\n              [0]: () => {\n                u.goToOption(R.Next);\n              },\n              [1]: () => {\n                u.openCombobox();\n              }\n            });\n          case v.ArrowUp:\n            return d.preventDefault(), d.stopPropagation(), k(o.comboboxState, {\n              [0]: () => {\n                u.goToOption(R.Previous);\n              },\n              [1]: () => {\n                u.openCombobox(), x.nextFrame(() => {\n                  o.value || u.goToOption(R.Last);\n                });\n              }\n            });\n          case v.Home:\n          case v.PageUp:\n            return d.preventDefault(), d.stopPropagation(), u.goToOption(R.First);\n          case v.End:\n          case v.PageDown:\n            return d.preventDefault(), d.stopPropagation(), u.goToOption(R.Last);\n          case v.Escape:\n            return o.comboboxState !== 0 ? void 0 : (d.preventDefault(), o.optionsRef.current && !o.optionsPropsRef.current.static && d.stopPropagation(), u.closeCombobox());\n          case v.Tab:\n            if (o.comboboxState !== 0) return;\n            o.mode === 0 && u.selectActiveOption(), u.closeCombobox();\n            break;\n        }\n      }),\n      s = g(d => {\n        u.openCombobox(), i == null || i(d);\n      }),\n      T = W(() => {\n        if (!!o.labelId) return [o.labelId].join(\" \");\n      }, [o.labelId]),\n      B = P(() => ({\n        open: o.comboboxState === 0,\n        disabled: o.disabled\n      }), [o]),\n      L = {\n        ref: y,\n        id: O,\n        role: \"combobox\",\n        type: a,\n        \"aria-controls\": (E = o.optionsRef.current) == null ? void 0 : E.id,\n        \"aria-expanded\": o.disabled ? void 0 : o.comboboxState === 0,\n        \"aria-activedescendant\": o.activeOptionIndex === null || (V = o.options[o.activeOptionIndex]) == null ? void 0 : V.id,\n        \"aria-multiselectable\": o.mode === 1 ? !0 : void 0,\n        \"aria-labelledby\": T,\n        disabled: o.disabled,\n        onKeyDown: c,\n        onChange: s\n      };\n    return _({\n      ourProps: L,\n      theirProps: m,\n      slot: B,\n      defaultTag: Be,\n      name: \"Combobox.Input\"\n    });\n  }),\n  Ge = \"button\",\n  Ne = F(function (l, n) {\n    var c;\n    let e = w(\"Combobox.Button\"),\n      i = N(\"Combobox.Button\"),\n      r = G(e.buttonRef, n),\n      a = `headlessui-combobox-button-${U()}`,\n      m = Z(),\n      o = g(s => {\n        switch (s.key) {\n          case v.ArrowDown:\n            return s.preventDefault(), s.stopPropagation(), e.comboboxState === 1 && i.openCombobox(), m.nextFrame(() => {\n              var T;\n              return (T = e.inputRef.current) == null ? void 0 : T.focus({\n                preventScroll: !0\n              });\n            });\n          case v.ArrowUp:\n            return s.preventDefault(), s.stopPropagation(), e.comboboxState === 1 && (i.openCombobox(), m.nextFrame(() => {\n              e.value || i.goToOption(R.Last);\n            })), m.nextFrame(() => {\n              var T;\n              return (T = e.inputRef.current) == null ? void 0 : T.focus({\n                preventScroll: !0\n              });\n            });\n          case v.Escape:\n            return e.comboboxState !== 0 ? void 0 : (s.preventDefault(), e.optionsRef.current && !e.optionsPropsRef.current.static && s.stopPropagation(), i.closeCombobox(), m.nextFrame(() => {\n              var T;\n              return (T = e.inputRef.current) == null ? void 0 : T.focus({\n                preventScroll: !0\n              });\n            }));\n          default:\n            return;\n        }\n      }),\n      u = g(s => {\n        if (Ce(s.currentTarget)) return s.preventDefault();\n        e.comboboxState === 0 ? i.closeCombobox() : (s.preventDefault(), i.openCombobox()), m.nextFrame(() => {\n          var T;\n          return (T = e.inputRef.current) == null ? void 0 : T.focus({\n            preventScroll: !0\n          });\n        });\n      }),\n      y = W(() => {\n        if (!!e.labelId) return [e.labelId, a].join(\" \");\n      }, [e.labelId, a]),\n      O = P(() => ({\n        open: e.comboboxState === 0,\n        disabled: e.disabled,\n        value: e.value\n      }), [e]),\n      x = l,\n      C = {\n        ref: r,\n        id: a,\n        type: Te(l, e.buttonRef),\n        tabIndex: -1,\n        \"aria-haspopup\": !0,\n        \"aria-controls\": (c = e.optionsRef.current) == null ? void 0 : c.id,\n        \"aria-expanded\": e.disabled ? void 0 : e.comboboxState === 0,\n        \"aria-labelledby\": y,\n        disabled: e.disabled,\n        onClick: u,\n        onKeyDown: o\n      };\n    return _({\n      ourProps: C,\n      theirProps: x,\n      slot: O,\n      defaultTag: Ge,\n      name: \"Combobox.Button\"\n    });\n  }),\n  He = \"label\",\n  je = F(function (l, n) {\n    let e = w(\"Combobox.Label\"),\n      i = `headlessui-combobox-label-${U()}`,\n      r = N(\"Combobox.Label\"),\n      a = G(e.labelRef, n);\n    D(() => r.registerLabel(i), [i]);\n    let m = g(() => {\n        var O;\n        return (O = e.inputRef.current) == null ? void 0 : O.focus({\n          preventScroll: !0\n        });\n      }),\n      o = P(() => ({\n        open: e.comboboxState === 0,\n        disabled: e.disabled\n      }), [e]);\n    return _({\n      ourProps: {\n        ref: a,\n        id: i,\n        onClick: m\n      },\n      theirProps: l,\n      slot: o,\n      defaultTag: He,\n      name: \"Combobox.Label\"\n    });\n  }),\n  Ke = \"ul\",\n  We = ee.RenderStrategy | ee.Static,\n  Xe = F(function (l, n) {\n    var C;\n    let {\n        hold: e = !1,\n        ...i\n      } = l,\n      r = w(\"Combobox.Options\"),\n      a = G(r.optionsRef, n),\n      m = `headlessui-combobox-options-${U()}`,\n      o = Se(),\n      u = (() => o !== null ? o === X.Open : r.comboboxState === 0)();\n    D(() => {\n      var c;\n      r.optionsPropsRef.current.static = (c = l.static) != null ? c : !1;\n    }, [r.optionsPropsRef, l.static]), D(() => {\n      r.optionsPropsRef.current.hold = e;\n    }, [r.optionsPropsRef, e]), xe({\n      container: r.optionsRef.current,\n      enabled: r.comboboxState === 0,\n      accept(c) {\n        return c.getAttribute(\"role\") === \"option\" ? NodeFilter.FILTER_REJECT : c.hasAttribute(\"role\") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT;\n      },\n      walk(c) {\n        c.setAttribute(\"role\", \"none\");\n      }\n    });\n    let y = W(() => {\n        var c, s;\n        return (s = r.labelId) != null ? s : (c = r.buttonRef.current) == null ? void 0 : c.id;\n      }, [r.labelId, r.buttonRef.current]),\n      O = P(() => ({\n        open: r.comboboxState === 0\n      }), [r]),\n      x = {\n        \"aria-activedescendant\": r.activeOptionIndex === null || (C = r.options[r.activeOptionIndex]) == null ? void 0 : C.id,\n        \"aria-labelledby\": y,\n        role: \"listbox\",\n        id: m,\n        ref: a\n      };\n    return _({\n      ourProps: x,\n      theirProps: i,\n      slot: O,\n      defaultTag: Ke,\n      features: We,\n      visible: u,\n      name: \"Combobox.Options\"\n    });\n  }),\n  $e = \"li\",\n  Je = F(function (l, n) {\n    var A, M;\n    let {\n        disabled: e = !1,\n        value: i,\n        ...r\n      } = l,\n      a = w(\"Combobox.Option\"),\n      m = N(\"Combobox.Option\"),\n      o = `headlessui-combobox-option-${U()}`,\n      u = a.activeOptionIndex !== null ? a.options[a.activeOptionIndex].id === o : !1,\n      y = a.isSelected(i),\n      O = I(null),\n      x = fe({\n        disabled: e,\n        value: i,\n        domRef: O,\n        textValue: (M = (A = O.current) == null ? void 0 : A.textContent) == null ? void 0 : M.toLowerCase()\n      }),\n      C = G(n, O),\n      c = g(() => m.selectOption(o));\n    D(() => m.registerOption(o, x), [x, o]);\n    let s = I(!a.__demoMode);\n    D(() => {\n      if (!a.__demoMode) return;\n      let p = z();\n      return p.requestAnimationFrame(() => {\n        s.current = !0;\n      }), p.dispose;\n    }, []), D(() => {\n      if (a.comboboxState !== 0 || !u || !s.current || a.activationTrigger === 0) return;\n      let p = z();\n      return p.requestAnimationFrame(() => {\n        var h, H;\n        (H = (h = O.current) == null ? void 0 : h.scrollIntoView) == null || H.call(h, {\n          block: \"nearest\"\n        });\n      }), p.dispose;\n    }, [O, u, a.comboboxState, a.activationTrigger, a.activeOptionIndex]);\n    let T = g(p => {\n        if (e) return p.preventDefault();\n        c(), a.mode === 0 && m.closeCombobox();\n      }),\n      B = g(() => {\n        if (e) return m.goToOption(R.Nothing);\n        m.goToOption(R.Specific, o);\n      }),\n      L = g(() => {\n        e || u || m.goToOption(R.Specific, o, 0);\n      }),\n      E = g(() => {\n        e || !u || a.optionsPropsRef.current.hold || m.goToOption(R.Nothing);\n      }),\n      V = P(() => ({\n        active: u,\n        selected: y,\n        disabled: e\n      }), [u, y, e]);\n    return _({\n      ourProps: {\n        id: o,\n        ref: C,\n        role: \"option\",\n        tabIndex: e === !0 ? void 0 : -1,\n        \"aria-disabled\": e === !0 ? !0 : void 0,\n        \"aria-selected\": y,\n        disabled: void 0,\n        onClick: T,\n        onFocus: B,\n        onPointerMove: L,\n        onMouseMove: L,\n        onPointerLeave: E,\n        onMouseLeave: E\n      },\n      theirProps: r,\n      slot: V,\n      defaultTag: $e,\n      name: \"Combobox.Option\"\n    });\n  }),\n  Lo = Object.assign(we, {\n    Input: Ue,\n    Button: Ne,\n    Label: je,\n    Options: Xe,\n    Option: Je\n  });\nexport { Lo as Combobox };","map":null,"metadata":{},"sourceType":"module"}