{"ast":null,"code":"import { useEffect as C, useRef as a } from \"react\";\nimport { FocusableMode as d, isFocusableElement as v } from '../utils/focus-management.js';\nimport { useDocumentEvent as o } from './use-document-event.js';\nfunction L(f, m, i = !0) {\n  let l = a(!1);\n  C(() => {\n    requestAnimationFrame(() => {\n      l.current = i;\n    });\n  }, [i]);\n  function c(t, E) {\n    if (!l.current || t.defaultPrevented) return;\n    let s = function r(e) {\n        return typeof e == \"function\" ? r(e()) : Array.isArray(e) || e instanceof Set ? e : [e];\n      }(f),\n      n = E(t);\n    if (n !== null && !!n.ownerDocument.documentElement.contains(n)) {\n      for (let r of s) {\n        if (r === null) continue;\n        let e = r instanceof HTMLElement ? r : r.current;\n        if (e != null && e.contains(n)) return;\n      }\n      return !v(n, d.Loose) && n.tabIndex !== -1 && t.preventDefault(), m(t, n);\n    }\n  }\n  let u = a(null);\n  o(\"mousedown\", t => {\n    l.current && (u.current = t.target);\n  }, !0), o(\"click\", t => {\n    !u.current || (c(t, () => u.current), u.current = null);\n  }, !0), o(\"blur\", t => c(t, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0);\n}\nexport { L as useOutsideClick };","map":null,"metadata":{},"sourceType":"module"}