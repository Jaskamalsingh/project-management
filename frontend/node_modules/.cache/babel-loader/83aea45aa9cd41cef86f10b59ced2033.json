{"ast":null,"code":"import { Reason as i, transition as m } from '../components/transitions/utils/transition.js';\nimport { disposables as f } from '../utils/disposables.js';\nimport { match as p } from '../utils/match.js';\nimport { useDisposables as b } from './use-disposables.js';\nimport { useIsMounted as g } from './use-is-mounted.js';\nimport { useIsoMorphicEffect as M } from './use-iso-morphic-effect.js';\nimport { useLatestValue as T } from './use-latest-value.js';\nfunction I({\n  container: o,\n  direction: t,\n  classes: s,\n  onStart: a,\n  onStop: u\n}) {\n  let c = g(),\n    d = b(),\n    r = T(t);\n  M(() => {\n    let e = f();\n    d.add(e.dispose);\n    let n = o.current;\n    if (!!n && r.current !== \"idle\" && !!c.current) return e.dispose(), a.current(r.current), e.add(m(n, s.current, r.current === \"enter\", l => {\n      e.dispose(), p(l, {\n        [i.Ended]() {\n          u.current(r.current);\n        },\n        [i.Cancelled]: () => {}\n      });\n    })), e.dispose;\n  }, [t]);\n}\nexport { I as useTransition };","map":null,"metadata":{},"sourceType":"module"}