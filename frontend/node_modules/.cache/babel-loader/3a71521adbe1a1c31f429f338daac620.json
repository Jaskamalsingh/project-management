{"ast":null,"code":"import c, { createContext as oe, createRef as re, useContext as Y, useEffect as F, useMemo as b, useReducer as le, useRef as x, useState as ne } from \"react\";\nimport { match as k } from '../../utils/match.js';\nimport { forwardRefWithAs as A, render as E, Features as j } from '../../utils/render.js';\nimport { useSyncRefs as v } from '../../hooks/use-sync-refs.js';\nimport { Keys as ie } from '../keyboard.js';\nimport { isDisabledReactIssue7711 as ae } from '../../utils/bugs.js';\nimport { useId as O } from '../../hooks/use-id.js';\nimport { FocusTrap as C } from '../../components/focus-trap/focus-trap.js';\nimport { useInertOthers as se } from '../../hooks/use-inert-others.js';\nimport { Portal as I } from '../../components/portal/portal.js';\nimport { ForcePortalRoot as H } from '../../internal/portal-force-root.js';\nimport { Description as pe, useDescriptions as de } from '../description/description.js';\nimport { useOpenClosed as ue, State as N } from '../../internal/open-closed.js';\nimport { useServerHandoffComplete as fe } from '../../hooks/use-server-handoff-complete.js';\nimport { StackProvider as ce, StackMessage as V } from '../../internal/stack-context.js';\nimport { useOutsideClick as ge } from '../../hooks/use-outside-click.js';\nimport { useOwnerDocument as Te } from '../../hooks/use-owner.js';\nimport { useEventListener as me } from '../../hooks/use-event-listener.js';\nimport { Hidden as Pe, Features as De } from '../../internal/hidden.js';\nimport { useEvent as S } from '../../hooks/use-event.js';\nimport { disposables as ye } from '../../utils/disposables.js';\nimport { isIOS as he } from '../../utils/platform.js';\nvar Re = (r => (r[r.Open = 0] = \"Open\", r[r.Closed = 1] = \"Closed\", r))(Re || {}),\n  be = (e => (e[e.SetTitleId = 0] = \"SetTitleId\", e))(be || {});\nlet Ae = {\n    [0](l, e) {\n      return l.titleId === e.id ? l : {\n        ...l,\n        titleId: e.id\n      };\n    }\n  },\n  M = oe(null);\nM.displayName = \"DialogContext\";\nfunction L(l) {\n  let e = Y(M);\n  if (e === null) {\n    let r = new Error(`<${l} /> is missing a parent <Dialog /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(r, L), r;\n  }\n  return e;\n}\nfunction Ee(l, e) {\n  F(() => {\n    var p;\n    if (!e || !l) return;\n    let r = ye();\n    function t(n, d, m) {\n      let i = n.style.getPropertyValue(d);\n      return Object.assign(n.style, {\n        [d]: m\n      }), r.add(() => {\n        Object.assign(n.style, {\n          [d]: i\n        });\n      });\n    }\n    let o = l.documentElement,\n      s = ((p = l.defaultView) != null ? p : window).innerWidth - o.clientWidth;\n    if (t(o, \"overflow\", \"hidden\"), s > 0) {\n      let n = o.clientWidth - o.offsetWidth,\n        d = s - n;\n      t(o, \"paddingRight\", `${d}px`);\n    }\n    if (he()) {\n      let n = window.pageYOffset;\n      t(o, \"position\", \"fixed\"), t(o, \"marginTop\", `-${n}px`), t(o, \"width\", \"100%\"), r.add(() => window.scrollTo(0, n));\n    }\n    return r.dispose;\n  }, [l, e]);\n}\nfunction ve(l, e) {\n  return k(e.type, Ae, l, e);\n}\nlet Oe = \"div\",\n  Ce = j.RenderStrategy | j.Static,\n  Se = A(function (e, r) {\n    let {\n        open: t,\n        onClose: o,\n        initialFocus: a,\n        __demoMode: s = !1,\n        ...p\n      } = e,\n      [n, d] = ne(0),\n      m = ue();\n    t === void 0 && m !== null && (t = k(m, {\n      [N.Open]: !0,\n      [N.Closed]: !1\n    }));\n    let i = x(new Set()),\n      T = x(null),\n      K = v(T, r),\n      W = x(null),\n      P = Te(T),\n      B = e.hasOwnProperty(\"open\") || m !== null,\n      G = e.hasOwnProperty(\"onClose\");\n    if (!B && !G) throw new Error(\"You have to provide an `open` and an `onClose` prop to the `Dialog` component.\");\n    if (!B) throw new Error(\"You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.\");\n    if (!G) throw new Error(\"You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.\");\n    if (typeof t != \"boolean\") throw new Error(`You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${t}`);\n    if (typeof o != \"function\") throw new Error(`You provided an \\`onClose\\` prop to the \\`Dialog\\`, but the value is not a function. Received: ${o}`);\n    let u = t ? 0 : 1,\n      [y, q] = le(ve, {\n        titleId: null,\n        descriptionId: null,\n        panelRef: re()\n      }),\n      h = S(() => o(!1)),\n      U = S(f => q({\n        type: 0,\n        id: f\n      })),\n      _ = fe() ? s ? !1 : u === 0 : !1,\n      w = n > 1,\n      z = Y(M) !== null,\n      J = w ? \"parent\" : \"leaf\";\n    se(T, w ? _ : !1), ge(() => {\n      var R, g;\n      return [...Array.from((R = P == null ? void 0 : P.querySelectorAll(\"body > *, [data-headlessui-portal]\")) != null ? R : []).filter(D => !(!(D instanceof HTMLElement) || D.contains(W.current) || y.panelRef.current && D.contains(y.panelRef.current))), (g = y.panelRef.current) != null ? g : T.current];\n    }, h, _ && !w), me(P == null ? void 0 : P.defaultView, \"keydown\", f => {\n      f.defaultPrevented || f.key === ie.Escape && u === 0 && (w || (f.preventDefault(), f.stopPropagation(), h()));\n    }), Ee(P, u === 0 && !z), F(() => {\n      if (u !== 0 || !T.current) return;\n      let f = new IntersectionObserver(R => {\n        for (let g of R) g.boundingClientRect.x === 0 && g.boundingClientRect.y === 0 && g.boundingClientRect.width === 0 && g.boundingClientRect.height === 0 && h();\n      });\n      return f.observe(T.current), () => f.disconnect();\n    }, [u, T, h]);\n    let [Q, X] = de(),\n      Z = `headlessui-dialog-${O()}`,\n      ee = b(() => [{\n        dialogState: u,\n        close: h,\n        setTitleId: U\n      }, y], [u, y, h, U]),\n      $ = b(() => ({\n        open: u === 0\n      }), [u]),\n      te = {\n        ref: K,\n        id: Z,\n        role: \"dialog\",\n        \"aria-modal\": u === 0 ? !0 : void 0,\n        \"aria-labelledby\": y.titleId,\n        \"aria-describedby\": Q\n      };\n    return c.createElement(ce, {\n      type: \"Dialog\",\n      enabled: u === 0,\n      element: T,\n      onUpdate: S((f, R, g) => {\n        R === \"Dialog\" && k(f, {\n          [V.Add]() {\n            i.current.add(g), d(D => D + 1);\n          },\n          [V.Remove]() {\n            i.current.add(g), d(D => D - 1);\n          }\n        });\n      })\n    }, c.createElement(H, {\n      force: !0\n    }, c.createElement(I, null, c.createElement(M.Provider, {\n      value: ee\n    }, c.createElement(I.Group, {\n      target: T\n    }, c.createElement(H, {\n      force: !1\n    }, c.createElement(X, {\n      slot: $,\n      name: \"Dialog.Description\"\n    }, c.createElement(C, {\n      initialFocus: a,\n      containers: i,\n      features: _ ? k(J, {\n        parent: C.features.RestoreFocus,\n        leaf: C.features.All & ~C.features.FocusLock\n      }) : C.features.None\n    }, E({\n      ourProps: te,\n      theirProps: p,\n      slot: $,\n      defaultTag: Oe,\n      features: Ce,\n      visible: u === 0,\n      name: \"Dialog\"\n    })))))))), c.createElement(Pe, {\n      features: De.Hidden,\n      ref: W\n    }));\n  }),\n  Le = \"div\",\n  we = A(function (e, r) {\n    let [{\n        dialogState: t,\n        close: o\n      }] = L(\"Dialog.Overlay\"),\n      a = v(r),\n      s = `headlessui-dialog-overlay-${O()}`,\n      p = S(i => {\n        if (i.target === i.currentTarget) {\n          if (ae(i.currentTarget)) return i.preventDefault();\n          i.preventDefault(), i.stopPropagation(), o();\n        }\n      }),\n      n = b(() => ({\n        open: t === 0\n      }), [t]);\n    return E({\n      ourProps: {\n        ref: a,\n        id: s,\n        \"aria-hidden\": !0,\n        onClick: p\n      },\n      theirProps: e,\n      slot: n,\n      defaultTag: Le,\n      name: \"Dialog.Overlay\"\n    });\n  }),\n  Fe = \"div\",\n  ke = A(function (e, r) {\n    let [{\n        dialogState: t\n      }, o] = L(\"Dialog.Backdrop\"),\n      a = v(r),\n      s = `headlessui-dialog-backdrop-${O()}`;\n    F(() => {\n      if (o.panelRef.current === null) throw new Error(\"A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.\");\n    }, [o.panelRef]);\n    let p = b(() => ({\n      open: t === 0\n    }), [t]);\n    return c.createElement(H, {\n      force: !0\n    }, c.createElement(I, null, E({\n      ourProps: {\n        ref: a,\n        id: s,\n        \"aria-hidden\": !0\n      },\n      theirProps: e,\n      slot: p,\n      defaultTag: Fe,\n      name: \"Dialog.Backdrop\"\n    })));\n  }),\n  Me = \"div\",\n  _e = A(function (e, r) {\n    let [{\n        dialogState: t\n      }, o] = L(\"Dialog.Panel\"),\n      a = v(r, o.panelRef),\n      s = `headlessui-dialog-panel-${O()}`,\n      p = b(() => ({\n        open: t === 0\n      }), [t]),\n      n = S(i => {\n        i.stopPropagation();\n      });\n    return E({\n      ourProps: {\n        ref: a,\n        id: s,\n        onClick: n\n      },\n      theirProps: e,\n      slot: p,\n      defaultTag: Me,\n      name: \"Dialog.Panel\"\n    });\n  }),\n  xe = \"h2\",\n  Ie = A(function (e, r) {\n    let [{\n        dialogState: t,\n        setTitleId: o\n      }] = L(\"Dialog.Title\"),\n      a = `headlessui-dialog-title-${O()}`,\n      s = v(r);\n    F(() => (o(a), () => o(null)), [a, o]);\n    let p = b(() => ({\n      open: t === 0\n    }), [t]);\n    return E({\n      ourProps: {\n        ref: s,\n        id: a\n      },\n      theirProps: e,\n      slot: p,\n      defaultTag: xe,\n      name: \"Dialog.Title\"\n    });\n  }),\n  gt = Object.assign(Se, {\n    Backdrop: ke,\n    Panel: _e,\n    Overlay: we,\n    Title: Ie,\n    Description: pe\n  });\nexport { gt as Dialog };","map":null,"metadata":{},"sourceType":"module"}