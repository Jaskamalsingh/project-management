{"ast":null,"code":"import i, { useEffect as h, useRef as m } from \"react\";\nimport { forwardRefWithAs as y, render as S } from '../../utils/render.js';\nimport { useServerHandoffComplete as g } from '../../hooks/use-server-handoff-complete.js';\nimport { useSyncRefs as B } from '../../hooks/use-sync-refs.js';\nimport { Features as M, Hidden as L } from '../../internal/hidden.js';\nimport { focusElement as f, focusIn as b, Focus as E, FocusResult as I } from '../../utils/focus-management.js';\nimport { match as P } from '../../utils/match.js';\nimport { useEvent as _ } from '../../hooks/use-event.js';\nimport { useTabDirection as U, Direction as d } from '../../hooks/use-tab-direction.js';\nimport { useIsMounted as H } from '../../hooks/use-is-mounted.js';\nimport { useOwnerDocument as C } from '../../hooks/use-owner.js';\nimport { useEventListener as R } from '../../hooks/use-event-listener.js';\nimport { microTask as F } from '../../utils/micro-task.js';\nimport { useWatch as O } from '../../hooks/use-watch.js';\nlet N = \"div\";\nvar v = (r => (r[r.None = 1] = \"None\", r[r.InitialFocus = 2] = \"InitialFocus\", r[r.TabLock = 4] = \"TabLock\", r[r.FocusLock = 8] = \"FocusLock\", r[r.RestoreFocus = 16] = \"RestoreFocus\", r[r.All = 30] = \"All\", r))(v || {});\nlet fe = Object.assign(y(function (u, e) {\n  let l = m(null),\n    o = B(l, e),\n    {\n      initialFocus: a,\n      containers: r,\n      features: n = 30,\n      ...c\n    } = u;\n  g() || (n = 1);\n  let s = C(l);\n  V({\n    ownerDocument: s\n  }, Boolean(n & 16));\n  let j = x({\n    ownerDocument: s,\n    container: l,\n    initialFocus: a\n  }, Boolean(n & 2));\n  G({\n    ownerDocument: s,\n    container: l,\n    containers: r,\n    previousActiveElement: j\n  }, Boolean(n & 8));\n  let k = U(),\n    p = _(() => {\n      let T = l.current;\n      !T || P(k.current, {\n        [d.Forwards]: () => b(T, E.First),\n        [d.Backwards]: () => b(T, E.Last)\n      });\n    }),\n    A = {\n      ref: o\n    };\n  return i.createElement(i.Fragment, null, Boolean(n & 4) && i.createElement(L, {\n    as: \"button\",\n    type: \"button\",\n    onFocus: p,\n    features: M.Focusable\n  }), S({\n    ourProps: A,\n    theirProps: c,\n    defaultTag: N,\n    name: \"FocusTrap\"\n  }), Boolean(n & 4) && i.createElement(L, {\n    as: \"button\",\n    type: \"button\",\n    onFocus: p,\n    features: M.Focusable\n  }));\n}), {\n  features: v\n});\nfunction V({\n  ownerDocument: t\n}, u) {\n  let e = m(null);\n  R(t == null ? void 0 : t.defaultView, \"focusout\", o => {\n    !u || e.current || (e.current = o.target);\n  }, !0), O(() => {\n    u || ((t == null ? void 0 : t.activeElement) === (t == null ? void 0 : t.body) && f(e.current), e.current = null);\n  }, [u]);\n  let l = m(!1);\n  h(() => (l.current = !1, () => {\n    l.current = !0, F(() => {\n      !l.current || (f(e.current), e.current = null);\n    });\n  }), []);\n}\nfunction x({\n  ownerDocument: t,\n  container: u,\n  initialFocus: e\n}, l) {\n  let o = m(null),\n    a = H();\n  return O(() => {\n    if (!l) return;\n    let r = u.current;\n    !r || F(() => {\n      if (!a.current) return;\n      let n = t == null ? void 0 : t.activeElement;\n      if (e != null && e.current) {\n        if ((e == null ? void 0 : e.current) === n) {\n          o.current = n;\n          return;\n        }\n      } else if (r.contains(n)) {\n        o.current = n;\n        return;\n      }\n      e != null && e.current ? f(e.current) : b(r, E.First) === I.Error && console.warn(\"There are no focusable elements inside the <FocusTrap />\"), o.current = t == null ? void 0 : t.activeElement;\n    });\n  }, [l]), o;\n}\nfunction G({\n  ownerDocument: t,\n  container: u,\n  containers: e,\n  previousActiveElement: l\n}, o) {\n  let a = H();\n  R(t == null ? void 0 : t.defaultView, \"focus\", r => {\n    if (!o || !a.current) return;\n    let n = new Set(e == null ? void 0 : e.current);\n    n.add(u);\n    let c = l.current;\n    if (!c) return;\n    let s = r.target;\n    s && s instanceof HTMLElement ? W(n, s) ? (l.current = s, f(s)) : (r.preventDefault(), r.stopPropagation(), f(c)) : f(l.current);\n  }, !0);\n}\nfunction W(t, u) {\n  var e;\n  for (let l of t) if ((e = l.current) != null && e.contains(u)) return !0;\n  return !1;\n}\nexport { fe as FocusTrap };","map":null,"metadata":{},"sourceType":"module"}