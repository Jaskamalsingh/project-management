{"ast":null,"code":"import G, { Fragment as q, createContext as J, createRef as V, useContext as Y, useEffect as Z, useMemo as E, useReducer as ee, useRef as Q } from \"react\";\nimport { useDisposables as B } from '../../hooks/use-disposables.js';\nimport { useId as U } from '../../hooks/use-id.js';\nimport { useIsoMorphicEffect as A } from '../../hooks/use-iso-morphic-effect.js';\nimport { useComputed as z } from '../../hooks/use-computed.js';\nimport { useSyncRefs as I } from '../../hooks/use-sync-refs.js';\nimport { Features as $, forwardRefWithAs as F, render as k, compact as te } from '../../utils/render.js';\nimport { match as h } from '../../utils/match.js';\nimport { disposables as _ } from '../../utils/disposables.js';\nimport { Keys as y } from '../keyboard.js';\nimport { Focus as L, calculateActiveIndex as oe } from '../../utils/calculate-active-index.js';\nimport { isDisabledReactIssue7711 as ne } from '../../utils/bugs.js';\nimport { isFocusableElement as re, FocusableMode as ie, sortByDomNode as ae } from '../../utils/focus-management.js';\nimport { useOpenClosed as le, State as H, OpenClosedProvider as se } from '../../internal/open-closed.js';\nimport { useResolveButtonType as pe } from '../../hooks/use-resolve-button-type.js';\nimport { useOutsideClick as ue } from '../../hooks/use-outside-click.js';\nimport { Hidden as de, Features as ce } from '../../internal/hidden.js';\nimport { objectToFormEntries as fe } from '../../utils/form.js';\nimport { getOwnerDocument as be } from '../../utils/owner.js';\nimport { useEvent as v } from '../../hooks/use-event.js';\nimport { useControllable as Te } from '../../hooks/use-controllable.js';\nvar ye = (n => (n[n.Open = 0] = \"Open\", n[n.Closed = 1] = \"Closed\", n))(ye || {}),\n  xe = (n => (n[n.Single = 0] = \"Single\", n[n.Multi = 1] = \"Multi\", n))(xe || {}),\n  Oe = (n => (n[n.Pointer = 0] = \"Pointer\", n[n.Other = 1] = \"Other\", n))(Oe || {}),\n  me = (r => (r[r.OpenListbox = 0] = \"OpenListbox\", r[r.CloseListbox = 1] = \"CloseListbox\", r[r.SetDisabled = 2] = \"SetDisabled\", r[r.SetOrientation = 3] = \"SetOrientation\", r[r.GoToOption = 4] = \"GoToOption\", r[r.Search = 5] = \"Search\", r[r.ClearSearch = 6] = \"ClearSearch\", r[r.RegisterOption = 7] = \"RegisterOption\", r[r.UnregisterOption = 8] = \"UnregisterOption\", r))(me || {});\nfunction j(t, i = n => n) {\n  let n = t.activeOptionIndex !== null ? t.options[t.activeOptionIndex] : null,\n    e = ae(i(t.options.slice()), u => u.dataRef.current.domRef.current),\n    o = n ? e.indexOf(n) : null;\n  return o === -1 && (o = null), {\n    options: e,\n    activeOptionIndex: o\n  };\n}\nlet ge = {\n    [1](t) {\n      return t.disabled || t.listboxState === 1 ? t : {\n        ...t,\n        activeOptionIndex: null,\n        listboxState: 1\n      };\n    },\n    [0](t) {\n      if (t.disabled || t.listboxState === 0) return t;\n      let i = t.activeOptionIndex,\n        {\n          value: n,\n          mode: e,\n          compare: o\n        } = t.propsRef.current,\n        u = t.options.findIndex(l => {\n          let s = l.dataRef.current.value;\n          return h(e, {\n            [1]: () => n.some(r => o(r, s)),\n            [0]: () => o(n, s)\n          });\n        });\n      return u !== -1 && (i = u), {\n        ...t,\n        listboxState: 0,\n        activeOptionIndex: i\n      };\n    },\n    [2](t, i) {\n      return t.disabled === i.disabled ? t : {\n        ...t,\n        disabled: i.disabled\n      };\n    },\n    [3](t, i) {\n      return t.orientation === i.orientation ? t : {\n        ...t,\n        orientation: i.orientation\n      };\n    },\n    [4](t, i) {\n      var o;\n      if (t.disabled || t.listboxState === 1) return t;\n      let n = j(t),\n        e = oe(i, {\n          resolveItems: () => n.options,\n          resolveActiveIndex: () => n.activeOptionIndex,\n          resolveId: u => u.id,\n          resolveDisabled: u => u.dataRef.current.disabled\n        });\n      return {\n        ...t,\n        ...n,\n        searchQuery: \"\",\n        activeOptionIndex: e,\n        activationTrigger: (o = i.trigger) != null ? o : 1\n      };\n    },\n    [5]: (t, i) => {\n      if (t.disabled || t.listboxState === 1) return t;\n      let e = t.searchQuery !== \"\" ? 0 : 1,\n        o = t.searchQuery + i.value.toLowerCase(),\n        l = (t.activeOptionIndex !== null ? t.options.slice(t.activeOptionIndex + e).concat(t.options.slice(0, t.activeOptionIndex + e)) : t.options).find(d => {\n          var r;\n          return !d.dataRef.current.disabled && ((r = d.dataRef.current.textValue) == null ? void 0 : r.startsWith(o));\n        }),\n        s = l ? t.options.indexOf(l) : -1;\n      return s === -1 || s === t.activeOptionIndex ? {\n        ...t,\n        searchQuery: o\n      } : {\n        ...t,\n        searchQuery: o,\n        activeOptionIndex: s,\n        activationTrigger: 1\n      };\n    },\n    [6](t) {\n      return t.disabled || t.listboxState === 1 || t.searchQuery === \"\" ? t : {\n        ...t,\n        searchQuery: \"\"\n      };\n    },\n    [7]: (t, i) => {\n      let n = {\n          id: i.id,\n          dataRef: i.dataRef\n        },\n        e = j(t, o => [...o, n]);\n      if (t.activeOptionIndex === null) {\n        let {\n            value: o,\n            mode: u,\n            compare: l\n          } = t.propsRef.current,\n          s = i.dataRef.current.value;\n        h(u, {\n          [1]: () => o.some(r => l(r, s)),\n          [0]: () => l(o, s)\n        }) && (e.activeOptionIndex = e.options.indexOf(n));\n      }\n      return {\n        ...t,\n        ...e\n      };\n    },\n    [8]: (t, i) => {\n      let n = j(t, e => {\n        let o = e.findIndex(u => u.id === i.id);\n        return o !== -1 && e.splice(o, 1), e;\n      });\n      return {\n        ...t,\n        ...n,\n        activationTrigger: 1\n      };\n    }\n  },\n  K = J(null);\nK.displayName = \"ListboxContext\";\nfunction w(t) {\n  let i = Y(K);\n  if (i === null) {\n    let n = new Error(`<${t} /> is missing a parent <Listbox /> component.`);\n    throw Error.captureStackTrace && Error.captureStackTrace(n, w), n;\n  }\n  return i;\n}\nfunction Re(t, i) {\n  return h(i.type, ge, t, i);\n}\nlet ve = q,\n  Le = F(function (i, n) {\n    let {\n      value: e,\n      defaultValue: o,\n      name: u,\n      onChange: l,\n      by: s = (p, T) => p === T,\n      disabled: d = !1,\n      horizontal: r = !1,\n      multiple: x = !1,\n      ...S\n    } = i;\n    const g = r ? \"horizontal\" : \"vertical\";\n    let O = I(n),\n      [m, f] = Te(e, l, o),\n      b = ee(Re, {\n        listboxState: 1,\n        propsRef: {\n          current: {\n            value: m,\n            onChange: f,\n            mode: x ? 1 : 0,\n            compare: v(typeof s == \"string\" ? (p, T) => {\n              let C = s;\n              return (p == null ? void 0 : p[C]) === (T == null ? void 0 : T[C]);\n            } : s)\n          }\n        },\n        labelRef: V(),\n        buttonRef: V(),\n        optionsRef: V(),\n        disabled: d,\n        orientation: g,\n        options: [],\n        searchQuery: \"\",\n        activeOptionIndex: null,\n        activationTrigger: 1\n      }),\n      [{\n        listboxState: a,\n        propsRef: c,\n        optionsRef: P,\n        buttonRef: D\n      }, M] = b;\n    c.current.value = m, c.current.mode = x ? 1 : 0, A(() => {\n      c.current.onChange = p => h(c.current.mode, {\n        [0]() {\n          return f(p);\n        },\n        [1]() {\n          let T = c.current.value.slice(),\n            {\n              compare: C\n            } = c.current,\n            W = T.findIndex(X => C(X, p));\n          return W === -1 ? T.push(p) : T.splice(W, 1), f(T);\n        }\n      });\n    }, [f, c]), A(() => M({\n      type: 2,\n      disabled: d\n    }), [d]), A(() => M({\n      type: 3,\n      orientation: g\n    }), [g]), ue([D, P], (p, T) => {\n      var C;\n      M({\n        type: 1\n      }), re(T, ie.Loose) || (p.preventDefault(), (C = D.current) == null || C.focus());\n    }, a === 0);\n    let N = E(() => ({\n        open: a === 0,\n        disabled: d,\n        value: m\n      }), [a, d, m]),\n      R = {\n        ref: O\n      };\n    return G.createElement(K.Provider, {\n      value: b\n    }, G.createElement(se, {\n      value: h(a, {\n        [0]: H.Open,\n        [1]: H.Closed\n      })\n    }, u != null && m != null && fe({\n      [u]: m\n    }).map(([p, T]) => G.createElement(de, {\n      features: ce.Hidden,\n      ...te({\n        key: p,\n        as: \"input\",\n        type: \"hidden\",\n        hidden: !0,\n        readOnly: !0,\n        name: p,\n        value: T\n      })\n    })), k({\n      ourProps: R,\n      theirProps: S,\n      slot: N,\n      defaultTag: ve,\n      name: \"Listbox\"\n    })));\n  }),\n  Se = \"button\",\n  Ae = F(function (i, n) {\n    var f;\n    let [e, o] = w(\"Listbox.Button\"),\n      u = I(e.buttonRef, n),\n      l = `headlessui-listbox-button-${U()}`,\n      s = B(),\n      d = v(b => {\n        switch (b.key) {\n          case y.Space:\n          case y.Enter:\n          case y.ArrowDown:\n            b.preventDefault(), o({\n              type: 0\n            }), s.nextFrame(() => {\n              e.propsRef.current.value || o({\n                type: 4,\n                focus: L.First\n              });\n            });\n            break;\n          case y.ArrowUp:\n            b.preventDefault(), o({\n              type: 0\n            }), s.nextFrame(() => {\n              e.propsRef.current.value || o({\n                type: 4,\n                focus: L.Last\n              });\n            });\n            break;\n        }\n      }),\n      r = v(b => {\n        switch (b.key) {\n          case y.Space:\n            b.preventDefault();\n            break;\n        }\n      }),\n      x = v(b => {\n        if (ne(b.currentTarget)) return b.preventDefault();\n        e.listboxState === 0 ? (o({\n          type: 1\n        }), s.nextFrame(() => {\n          var a;\n          return (a = e.buttonRef.current) == null ? void 0 : a.focus({\n            preventScroll: !0\n          });\n        })) : (b.preventDefault(), o({\n          type: 0\n        }));\n      }),\n      S = z(() => {\n        if (!!e.labelRef.current) return [e.labelRef.current.id, l].join(\" \");\n      }, [e.labelRef.current, l]),\n      g = E(() => ({\n        open: e.listboxState === 0,\n        disabled: e.disabled,\n        value: e.propsRef.current.value\n      }), [e]),\n      O = i,\n      m = {\n        ref: u,\n        id: l,\n        type: pe(i, e.buttonRef),\n        \"aria-haspopup\": !0,\n        \"aria-controls\": (f = e.optionsRef.current) == null ? void 0 : f.id,\n        \"aria-expanded\": e.disabled ? void 0 : e.listboxState === 0,\n        \"aria-labelledby\": S,\n        disabled: e.disabled,\n        onKeyDown: d,\n        onKeyUp: r,\n        onClick: x\n      };\n    return k({\n      ourProps: m,\n      theirProps: O,\n      slot: g,\n      defaultTag: Se,\n      name: \"Listbox.Button\"\n    });\n  }),\n  he = \"label\",\n  Pe = F(function (i, n) {\n    let [e] = w(\"Listbox.Label\"),\n      o = `headlessui-listbox-label-${U()}`,\n      u = I(e.labelRef, n),\n      l = v(() => {\n        var x;\n        return (x = e.buttonRef.current) == null ? void 0 : x.focus({\n          preventScroll: !0\n        });\n      }),\n      s = E(() => ({\n        open: e.listboxState === 0,\n        disabled: e.disabled\n      }), [e]);\n    return k({\n      ourProps: {\n        ref: u,\n        id: o,\n        onClick: l\n      },\n      theirProps: i,\n      slot: s,\n      defaultTag: he,\n      name: \"Listbox.Label\"\n    });\n  }),\n  Ce = \"ul\",\n  De = $.RenderStrategy | $.Static,\n  Me = F(function (i, n) {\n    var b;\n    let [e, o] = w(\"Listbox.Options\"),\n      u = I(e.optionsRef, n),\n      l = `headlessui-listbox-options-${U()}`,\n      s = B(),\n      d = B(),\n      r = le(),\n      x = (() => r !== null ? r === H.Open : e.listboxState === 0)();\n    Z(() => {\n      var c;\n      let a = e.optionsRef.current;\n      !a || e.listboxState === 0 && a !== ((c = be(a)) == null ? void 0 : c.activeElement) && a.focus({\n        preventScroll: !0\n      });\n    }, [e.listboxState, e.optionsRef]);\n    let S = v(a => {\n        switch (d.dispose(), a.key) {\n          case y.Space:\n            if (e.searchQuery !== \"\") return a.preventDefault(), a.stopPropagation(), o({\n              type: 5,\n              value: a.key\n            });\n          case y.Enter:\n            if (a.preventDefault(), a.stopPropagation(), e.activeOptionIndex !== null) {\n              let {\n                dataRef: c\n              } = e.options[e.activeOptionIndex];\n              e.propsRef.current.onChange(c.current.value);\n            }\n            e.propsRef.current.mode === 0 && (o({\n              type: 1\n            }), _().nextFrame(() => {\n              var c;\n              return (c = e.buttonRef.current) == null ? void 0 : c.focus({\n                preventScroll: !0\n              });\n            }));\n            break;\n          case h(e.orientation, {\n            vertical: y.ArrowDown,\n            horizontal: y.ArrowRight\n          }):\n            return a.preventDefault(), a.stopPropagation(), o({\n              type: 4,\n              focus: L.Next\n            });\n          case h(e.orientation, {\n            vertical: y.ArrowUp,\n            horizontal: y.ArrowLeft\n          }):\n            return a.preventDefault(), a.stopPropagation(), o({\n              type: 4,\n              focus: L.Previous\n            });\n          case y.Home:\n          case y.PageUp:\n            return a.preventDefault(), a.stopPropagation(), o({\n              type: 4,\n              focus: L.First\n            });\n          case y.End:\n          case y.PageDown:\n            return a.preventDefault(), a.stopPropagation(), o({\n              type: 4,\n              focus: L.Last\n            });\n          case y.Escape:\n            return a.preventDefault(), a.stopPropagation(), o({\n              type: 1\n            }), s.nextFrame(() => {\n              var c;\n              return (c = e.buttonRef.current) == null ? void 0 : c.focus({\n                preventScroll: !0\n              });\n            });\n          case y.Tab:\n            a.preventDefault(), a.stopPropagation();\n            break;\n          default:\n            a.key.length === 1 && (o({\n              type: 5,\n              value: a.key\n            }), d.setTimeout(() => o({\n              type: 6\n            }), 350));\n            break;\n        }\n      }),\n      g = z(() => {\n        var a, c, P;\n        return (P = (a = e.labelRef.current) == null ? void 0 : a.id) != null ? P : (c = e.buttonRef.current) == null ? void 0 : c.id;\n      }, [e.labelRef.current, e.buttonRef.current]),\n      O = E(() => ({\n        open: e.listboxState === 0\n      }), [e]),\n      m = i,\n      f = {\n        \"aria-activedescendant\": e.activeOptionIndex === null || (b = e.options[e.activeOptionIndex]) == null ? void 0 : b.id,\n        \"aria-multiselectable\": e.propsRef.current.mode === 1 ? !0 : void 0,\n        \"aria-labelledby\": g,\n        \"aria-orientation\": e.orientation,\n        id: l,\n        onKeyDown: S,\n        role: \"listbox\",\n        tabIndex: 0,\n        ref: u\n      };\n    return k({\n      ourProps: f,\n      theirProps: m,\n      slot: O,\n      defaultTag: Ce,\n      features: De,\n      visible: x,\n      name: \"Listbox.Options\"\n    });\n  }),\n  Ee = \"li\",\n  Ie = F(function (i, n) {\n    let {\n        disabled: e = !1,\n        value: o,\n        ...u\n      } = i,\n      [l, s] = w(\"Listbox.Option\"),\n      d = `headlessui-listbox-option-${U()}`,\n      r = l.activeOptionIndex !== null ? l.options[l.activeOptionIndex].id === d : !1,\n      {\n        value: x,\n        compare: S\n      } = l.propsRef.current,\n      g = h(l.propsRef.current.mode, {\n        [1]: () => x.some(R => S(R, o)),\n        [0]: () => S(x, o)\n      }),\n      O = Q(null),\n      m = I(n, O);\n    A(() => {\n      if (l.listboxState !== 0 || !r || l.activationTrigger === 0) return;\n      let R = _();\n      return R.requestAnimationFrame(() => {\n        var p, T;\n        (T = (p = O.current) == null ? void 0 : p.scrollIntoView) == null || T.call(p, {\n          block: \"nearest\"\n        });\n      }), R.dispose;\n    }, [O, r, l.listboxState, l.activationTrigger, l.activeOptionIndex]);\n    let f = Q({\n      disabled: e,\n      value: o,\n      domRef: O\n    });\n    A(() => {\n      f.current.disabled = e;\n    }, [f, e]), A(() => {\n      f.current.value = o;\n    }, [f, o]), A(() => {\n      var R, p;\n      f.current.textValue = (p = (R = O.current) == null ? void 0 : R.textContent) == null ? void 0 : p.toLowerCase();\n    }, [f, O]);\n    let b = v(() => l.propsRef.current.onChange(o));\n    A(() => (s({\n      type: 7,\n      id: d,\n      dataRef: f\n    }), () => s({\n      type: 8,\n      id: d\n    })), [f, d]);\n    let a = v(R => {\n        if (e) return R.preventDefault();\n        b(), l.propsRef.current.mode === 0 && (s({\n          type: 1\n        }), _().nextFrame(() => {\n          var p;\n          return (p = l.buttonRef.current) == null ? void 0 : p.focus({\n            preventScroll: !0\n          });\n        }));\n      }),\n      c = v(() => {\n        if (e) return s({\n          type: 4,\n          focus: L.Nothing\n        });\n        s({\n          type: 4,\n          focus: L.Specific,\n          id: d\n        });\n      }),\n      P = v(() => {\n        e || r || s({\n          type: 4,\n          focus: L.Specific,\n          id: d,\n          trigger: 0\n        });\n      }),\n      D = v(() => {\n        e || !r || s({\n          type: 4,\n          focus: L.Nothing\n        });\n      }),\n      M = E(() => ({\n        active: r,\n        selected: g,\n        disabled: e\n      }), [r, g, e]);\n    return k({\n      ourProps: {\n        id: d,\n        ref: m,\n        role: \"option\",\n        tabIndex: e === !0 ? void 0 : -1,\n        \"aria-disabled\": e === !0 ? !0 : void 0,\n        \"aria-selected\": g,\n        disabled: void 0,\n        onClick: a,\n        onFocus: c,\n        onPointerMove: P,\n        onMouseMove: P,\n        onPointerLeave: D,\n        onMouseLeave: D\n      },\n      theirProps: u,\n      slot: M,\n      defaultTag: Ee,\n      name: \"Listbox.Option\"\n    });\n  }),\n  pt = Object.assign(Le, {\n    Button: Ae,\n    Label: Pe,\n    Options: Me,\n    Option: Ie\n  });\nexport { pt as Listbox };","map":null,"metadata":{},"sourceType":"module"}